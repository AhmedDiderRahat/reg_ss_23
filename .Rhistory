##------ 2022-10-05 22:05:24 UTC ------##
##------ 2022-10-05 21:53:49 UTC ------##
##------ 2022-10-05 22:02:36 UTC ------##
##------ 2022-10-05 22:08:45 UTC ------##
##------ 2022-10-05 21:53:54 UTC ------##
##------ 2022-10-05 21:58:41 UTC ------##
##------ 2022-10-05 22:01:48 UTC ------##
##------ 2022-10-05 22:00:04 UTC ------##
##------ 2022-10-05 22:01:40 UTC ------##
##------ 2022-10-05 22:13:23 UTC ------##
##------ 2022-10-05 22:02:29 UTC ------##
##------ 2022-10-05 22:07:05 UTC ------##
##------ 2022-10-05 22:15:25 UTC ------##
##------ 2022-10-05 22:09:53 UTC ------##
##------ 2022-10-05 22:13:14 UTC ------##
##------ 2022-10-05 22:02:39 UTC ------##
##------ 2022-10-05 22:09:35 UTC ------##
##------ 2022-10-05 22:02:08 UTC ------##
##------ 2022-10-05 21:58:36 UTC ------##
##------ 2022-10-05 22:07:22 UTC ------##
##------ 2022-10-05 21:59:37 UTC ------##
##------ 2022-10-05 22:04:01 UTC ------##
##------ 2022-10-05 22:02:48 UTC ------##
##------ 2022-10-05 21:58:05 UTC ------##
##------ 2022-10-05 22:12:12 UTC ------##
##------ 2022-10-05 22:12:17 UTC ------##
##------ 2022-10-05 22:00:35 UTC ------##
##------ 2022-10-05 22:01:03 UTC ------##
##------ 2022-10-05 21:57:33 UTC ------##
##------ 2022-10-05 22:02:29 UTC ------##
##------ 2022-10-05 22:01:40 UTC ------##
##------ 2022-10-05 22:06:10 UTC ------##
##------ 2022-10-05 21:59:40 UTC ------##
##------ 2022-10-05 22:04:10 UTC ------##
##------ 2022-10-05 22:01:45 UTC ------##
##------ 2022-10-05 22:04:08 UTC ------##
##------ 2022-10-05 21:58:52 UTC ------##
##------ 2022-10-05 22:05:29 UTC ------##
##------ 2022-10-05 22:03:26 UTC ------##
##------ 2022-10-05 22:05:35 UTC ------##
##------ 2022-10-05 22:08:14 UTC ------##
##------ 2022-10-05 22:06:45 UTC ------##
##------ 2022-10-05 22:11:54 UTC ------##
##------ 2022-10-05 22:06:08 UTC ------##
##------ 2022-10-05 22:05:38 UTC ------##
##------ 2022-10-05 22:05:36 UTC ------##
##------ 2022-10-05 22:03:05 UTC ------##
##------ 2022-10-05 22:10:32 UTC ------##
##------ 2022-10-05 22:26:07 UTC ------##
##------ 2022-10-05 22:07:25 UTC ------##
##------ 2022-10-05 22:12:32 UTC ------##
##------ 2022-10-05 22:03:17 UTC ------##
##------ 2022-10-05 22:04:37 UTC ------##
##------ 2022-10-05 22:03:37 UTC ------##
##------ 2022-10-05 22:03:42 UTC ------##
##------ 2022-10-05 22:05:29 UTC ------##
##------ 2022-10-05 22:08:32 UTC ------##
##------ 2022-10-05 22:02:38 UTC ------##
##------ 2022-10-05 22:05:16 UTC ------##
##------ 2022-10-05 22:12:24 UTC ------##
##------ 2022-10-05 22:05:25 UTC ------##
##------ 2022-10-05 22:14:43 UTC ------##
##------ 2022-10-05 22:04:05 UTC ------##
##------ 2022-10-05 23:12:41 UTC ------##
##------ 2022-10-05 22:10:08 UTC ------##
##------ 2022-10-05 22:10:03 UTC ------##
##------ 2022-10-05 22:23:18 UTC ------##
##------ 2022-10-05 22:07:40 UTC ------##
##------ 2022-10-05 22:03:34 UTC ------##
##------ 2022-10-05 22:04:20 UTC ------##
##------ 2022-10-05 22:10:11 UTC ------##
##------ 2022-10-05 22:09:16 UTC ------##
##------ 2022-10-05 22:17:17 UTC ------##
class(ended_at)
ended_at[:10]
ended_at[,10]
ended_at[1:10]
trip_duration <- difftime(as.POSIXct(ended_at), as.POSIXct(started_at), "second")
trip_duration[1:10]
a <- as.POSIXct(ended_at[1:10])
b <- as.POSIXct(started_at[1:10])
c <- difftime(a, b, 'second') # trip_duration[1:10]
dt <- data.frame(a,b,c)
dt
trip_duration[1:10]
trip_duration <- difftime(as.POSIXct(ended_at), as.POSIXct(started_at), 'second')
trip_duration[1:10]
t1 <- as.POSIXct(started_at[1:10])
t2 <- as.POSIXct(ended_at[1:10])
t1
t3 <- trip_duration[1:10]
dt2 <- data.frame(t1, t2, t3); dt2
t1 <- as.POSIXct(started_at[1000:1010])
t2 <- as.POSIXct(ended_at[1000:1010])
t3 <- trip_duration[1000:1010]
dt2 <- data.frame(t1, t2, t3); dt2
t4 <- difftime(t1,t2, 'second')
dt2 <- data.frame(t1, t2, t3, t4); dt2
t4 <- difftime(t1,t2, 'seconds')
dt2 <- data.frame(t1, t2, t3, t4); dt2
t4 <- difftime(t1,t2, 'secs')
dt2 <- data.frame(t1, t2, t3, t4); dt2
t5 <- difftime(t1,t2, units = "secs")
dt2 <- data.frame(t1, t2, t3, t5); dt2
t5 <- difftime(t2,t1, units = "secs")
dt2 <- data.frame(t1, t2, t3, t5); dt2
trip_duration <- difftime(as.POSIXct(ended_at), as.POSIXct(started_at), units = "secs")
t1 <- as.POSIXct(started_at[1000:1010])
t2 <- as.POSIXct(ended_at[1000:1010])
t3 <- trip_duration[1000:1010]
t5 <- difftime(t2,t1, units = "secs")
dt2 <- data.frame(t1, t2, t3, t5); dt2
end_time <- as.POSIXct(ended_at)
# Exercise 3
par(mfrow=c(1,1))
# load dataset
data <- read.csv("Dataset/AnscombeQuartet.csv")
# view first 6 rows
head(data)
# Exercise 3
par(mfrow=c(1,1))
# load dataset
data <- read.csv("Dataset/AnscombeQuartet.csv")
# view first 6 rows
head(data)
regmodel <- function(X, Y, x_lab, y_lab) {
# defining the linear model object
lobj <- lm(Y ~ X)
b_hat <- lobj$coefficients
Y_hat <- b_hat[1] + (X * b_hat[2])
rss <- sum((Y-Y_hat)^2)
print(rss)
# print the r-squared
print(summary(lobj)$r.squared)
# plot the model
plot(X, Y, pch="+", xlab = x_lab, ylab = y_lab)
# draw the regression line
abline(lobj, col="seagreen", lwd = 2)
}
par(mfrow=c(2,2))
# call the function
regmodel(data$x1, data$y1, 'x1', ' y1')
regmodel(data$x2, data$y2, 'x2', ' y2')
regmodel(data$x3, data$y3, 'x3', ' y3')
regmodel(data$x4, data$y4, 'x4', ' y4')
par(mfrow=c(1,1))
# view first 6 rows
head(data)
regmodel <- function(X, Y, x_lab, y_lab) {
# defining the linear model object
lobj <- lm(Y ~ X)
b_hat <- lobj$coefficients
Y_hat <- b_hat[1] + (X * b_hat[2])
rss <- sum((Y-Y_hat)^2)
print(rss)
# print the r-squared
print(summary(lobj)$r.squared)
# plot the model
plot(X, Y, pch="+", xlab = x_lab, ylab = y_lab)
# draw the regression line
abline(lobj, col="seagreen", lwd = 2)
}
par(mfrow=c(2,2))
# call the function
regmodel(data$x1, data$y1, 'x1', ' y1')
# Preparations
rm(list = ls(all.names = TRUE))
par(mfrow=c(1,1))
X <- seq(from=-5, to=5, by=0.1)
cols <- rainbow(10)
Y <- dchisq(X, df=1)
plot.new()
plot(
X, Y, col=cols[1], type="l", xlim=c(-0.5,5), ylim=c(0, 1), main="Chi^2"
)
for (i in 2:5){
lines(X, dchisq(X, df=i), col=cols[i])
}
legend(
"topright",
legend=c("df=1", "df=2", "df=3", "df=4", "df=5"),
col=cols[1:5],
lty=c(1,1,1,1,1)
)
plot.new()
plot(
X, dt(X, 1), type="l", col=cols[1],
ylim=c(0, 0.4), main="t"
)
for (i in 2:5){
lines(X, dt(X, i), col=cols[i])
}
lines(
X, dnorm(X), col="blue"
)
legend(
2.5, 0.4,
legend=c("df=1", "df=2", "df=3", "df=4", "df=5","normal"),
col=c(cols[1:5],"blue"),  ## normal added to legend (MM)
lty=c(1,1,1,1,1)
)
lines(X, dt(X, 20))
chi_sq_data_1 <- rchisq(100000, 1)
chi_sq_data_3 <- rchisq(100000, 3)
chi_sq_data_6 <- rchisq(100000, 6)
chi_sq_data_40 <- rchisq(100000, 40)
chi_sq_data_100 <- rchisq(100000, 100)
chi_sq_data_500 <- rchisq(100000, 500)
r_data_1 <- rt(100000, 1)
r_data_3 <- rt(100000, 3)
r_data_6 <- rt(100000, 6)
r_data_40 <- rt(100000, 40)
r_data_100 <- rt(100000, 100)
r_data_500 <- rt(100000, 500)
chi_sq_means <- c(mean(chi_sq_data_1), mean(chi_sq_data_3), mean(chi_sq_data_6), mean(chi_sq_data_40),
mean(chi_sq_data_100), mean(chi_sq_data_500))
chi_sq_vars <- c(var(chi_sq_data_1), var(chi_sq_data_3), var(chi_sq_data_6), var(chi_sq_data_40),
var(chi_sq_data_100),  var(chi_sq_data_500))
t_means <- c(mean(r_data_1), mean(r_data_3), mean(r_data_6), mean(r_data_40),
mean(r_data_100), mean(r_data_500))
t_vars <- c(var(r_data_1), var(r_data_3), var(r_data_6), var(r_data_40),
var(r_data_100), var(r_data_500))
data.frame(
"df" = c(1, 3, 6, 40, 100, 500),
"Chi squared means"=chi_sq_means,
"Chi squared vars"=chi_sq_vars,
"T means"=t_means,
"T vars"=t_vars
)
1618/60
# Preparations
rm(list = ls(all.names = TRUE))
# load the dataset
library(AER)
data("Affairs")
# summary if the data
str(Affairs)
# attach the variables
attach(Affairs)
# check the variable affairs
table(affairs)
# make new variable Y
Affairs$Y <- as.numeric(Affairs$affairs > 0)
attach(Affairs)
table(Y)
mosaicplot(table(Y, gender), col=c("red","blue"))
mosaicplot(table(Y, children), col=(c("orange","green")))
mosaicplot(table(Y, rating), col=rainbow(5))
head(Affairs)
##install.packages("AER")
library(AER)
data(Affairs)
##?Affairs ## for help
Affairs$baffairs = as.factor(Affairs$affairs > 0)
spineplot(baffairs ~ gender, data = Affairs)
spineplot(baffairs ~ age, data = Affairs)
spineplot(baffairs ~ yearsmarried, data = Affairs)
spineplot(baffairs ~ children, data = Affairs)
spineplot(baffairs ~ rating, data = Affairs)
spineplot(children ~ yearsmarried, data = Affairs)
logit1 <- glm(formula = baffairs ~ yearsmarried, family = binomial(link = "logit"), data = Affairs)
logit2 <- glm(formula = baffairs ~ yearsmarried + rating, family = binomial(link = "logit"), data = Affairs)
logit3 <- glm(formula = baffairs ~ yearsmarried + children, family = binomial(link = "logit"), data = Affairs)
logit4 <- glm(formula = baffairs ~ yearsmarried + rating + children, family = binomial(link = "logit"), data = Affairs)
pred1 <- predict(logit1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred1
pred2 <- predict(logit2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred2
pred3 <- predict(logit3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred3
pred4 <- predict(logit4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred4
summary(logit3)
b3_hat <- summary(logit3)$Coefficients; b3_hat
b3_hat <- summary(logit3)$coefficients; b3_hat
y3_hat <- b3_hat[1] + (b3_hat[2] * 15) + (b3_hat[3]*1); y3_hat
#  -0.736417
y3_predict <- 1 / (1 + exp(y3_hat)); y3_predict
-1.80113+0.03867*15+0.48461
1/(1+exp(0.73647))
#  -0.736417
y3_predict <- 1 / (1 + exp(-y3_hat)); y3_predict
probit1 <- glm(formula = baffairs ~ yearsmarried, family = binomial(link = "probit"), data = Affairs)
probit2 <- glm(formula = baffairs ~ yearsmarried + rating, family = binomial(link = "probit"), data = Affairs)
probit3 <- glm(formula = baffairs ~ yearsmarried + children, family = binomial(link = "probit"), data = Affairs)
probit4 <- glm(formula = baffairs ~ yearsmarried + rating + children, family = binomial(link = "probit"), data = Affairs)
pred1 <- predict(probit1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred1
pred2 <- predict(probit2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred2
pred3 <- predict(probit3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred3
pred4 <- predict(probit4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); pred4
summary(probit3)
y3_hatp <- b3_hat[1] + (b3_hat[2] * 15) + (b3_hat[3]*1); y3_hat
#  -0.736417
y3_predictp <- 1 / (1 + exp(-y3_hatp)); y3_predictp
y3_predict
logit1 <- glm(formula = baffairs ~ yearsmarried, family = binomial(link = "logit"), data = Affairs)
logit2 <- glm(formula = baffairs ~ yearsmarried + rating, family = binomial(link = "logit"), data = Affairs)
logit3 <- glm(formula = baffairs ~ yearsmarried + children, family = binomial(link = "logit"), data = Affairs)
logit4 <- glm(formula = baffairs ~ yearsmarried + rating + children, family = binomial(link = "logit"), data = Affairs)
logit1 <- glm(formula = baffairs ~ yearsmarried, family = binomial(link = "logit"), data = Affairs)
logit2 <- glm(formula = baffairs ~ yearsmarried + rating, family = binomial(link = "logit"), data = Affairs)
logit3 <- glm(formula = baffairs ~ yearsmarried + children, family = binomial(link = "logit"), data = Affairs)
logit4 <- glm(formula = baffairs ~ yearsmarried + rating + children, family = binomial(link = "logit"), data = Affairs)
anova(logit1, logit2)
anova(logit1, logit2, test=(Chisq))
anova(logit1, logit2, test=("Chisq"))
AIC(logit1, logit2)
stepAIC(logit1, logit2)
library(MASS)
stepAIC(logit1, logit2)
anova(logit1, logit2, test=("Chisq"))
AIC(logit1, logit2)
probit1 <- glm(formula = baffairs ~ yearsmarried, family = binomial(link = "probit"), data = Affairs)
probit2 <- glm(formula = baffairs ~ yearsmarried + rating, family = binomial(link = "probit"), data = Affairs)
probit3 <- glm(formula = baffairs ~ yearsmarried + children, family = binomial(link = "probit"), data = Affairs)
probit4 <- glm(formula = baffairs ~ yearsmarried + rating + children, family = binomial(link = "probit"), data = Affairs)
anova(probit1, probit2, test=("Chisq"))
logit1
anova(logit1, logit2, test=("Chisq"))
AIC(logit1, logit2)
AIC(logit1, logit2, logit3, logit4)
anova(logit2, logit4)
anova(logit2, logit4, test = "Chisq")
logit_All = glm(formula = baffairs ~ . -affairs , family = binomial(link = "logit"), data = Affairs)
summary(logit_All)
stepAll <- stepAIC(logit_All)
summary(stepAll)
stepAIC(logit1, logit2, logit3, logit4, logit_All)
AIC(logit1, logit2, logit3, logit4, logit_All)
summary(logit2, logit_All)
anova(logit2, logit_All, test="Chisq")
logit_All = glm(formula = baffairs ~ . -affairs, family = binomial(link = "logit"), data = Affairs)
summary(logit_All)
stepAll <- stepAIC(logit_All)
anova(logit2, logit_All, test="Chisq")
Affairs$Y <- as.numeric(Affairs$affairs)
table(Y)
str(affairs)
affairs
Affairs$Y <- as.numeric(affairs)
table(Y)
Affairs$Y1 <- as.numeric(affairs)
table(Y1)
attach(Affairs)
Affairs$Y1 <- as.numeric(affairs)
attach(Affairs)
table(Y1)
mosaicplot(table(Y1, gender), col=c("red","blue"))
mosaicplot(table(Y1, children), col=(c("orange","green")))
mosaicplot(table(Y1, rating), col=rainbow(5))
mosaicplot(table(Y1, yearsmarried), col=rainbow(5))
poi1 <- glm(affairs ~ yearsmarried, family = poisson(), data = Affairs)
poi1 <- glm(affairs ~ yearsmarried, family = poisson(), data = Affairs)
poil2 <- glm(formula = baffairs ~ yearsmarried + rating, family = poisson(), data = Affairs)
poil1 <- glm(affairs ~ yearsmarried, family = poisson(), data = Affairs)
poil2 <- glm(affairs ~ yearsmarried + rating, family = poisson(), data = Affairs)
poil3 <- glm(affairs ~ yearsmarried + children, family = poisson(), data = Affairs)
poil4 <- glm(affairs ~ yearsmarried + + rating + children, family = poisson(), data = Affairs)
poil1 <- glm(affairs ~ yearsmarried, family = poisson(), data = Affairs)
poil2 <- glm(affairs ~ yearsmarried + rating, family = poisson(), data = Affairs)
poil3 <- glm(affairs ~ yearsmarried + children, family = poisson(), data = Affairs)
poil4 <- glm(affairs ~ yearsmarried + + rating + children, family = poisson(), data = Affairs)
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p1
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p2
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p3
p4 <- predict(poil4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p4
summary(poil1)
AIC(poil1, poil2, poil3, poil4)
library(AER)
data(Affairs)
poi1 <- glm(affairs ~ yearsmarried, family = poisson(), data = Affairs)
coef(poi1)
poi1 <- glm(affairs ~ yearsmarried, family = poisson(link="log"), data = Affairs)
coef(poi1)
pred1 <- predict(poi1, newdata=data.frame(yearsmarried = 15), type="response")
pred1
coef(poi1)
coef(poi1)[1]+coef(poi1)[2]*15       ## linear predictor
exp(coef(poi1)[1]+coef(poi1)[2]*15)  ## predicted E(Y|X=15)
poi1 <- glm(affairs ~ yearsmarried, family = poisson(), data = Affairs)
coef(poi1)
poi1 <- glm(affairs ~ yearsmarried, family = poisson(link="log"), data = Affairs)
coef(poi1)
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p1
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p2
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p3
p4 <- predict(poil4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p4
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); exp(p1)
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); exp(p2)
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); exp(p3)
p4 <- predict(poil4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); exp(p4)
exp(coef(poi1)[1]+coef(poi1)[2]*15)  ## predicted E(Y|X=15)
pred1 <- predict(poi1, newdata=data.frame(yearsmarried = 15), type="response")
pred1
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p1
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p2
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p3
poil1 <- glm(Y1 ~ yearsmarried, family = poisson(), data = Affairs)
poil2 <- glm(Y1 ~ yearsmarried + rating, family = poisson(), data = Affairs)
poil3 <- glm(Y1 ~ yearsmarried + children, family = poisson(), data = Affairs)
poil4 <- glm(Y1 ~ yearsmarried + + rating + children, family = poisson(), data = Affairs)
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p1
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p2
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p3
p4 <- predict(poil4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p4
table(Y1~yearsmarried)
table(Y1,yearsmarried)
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p1
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p2
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p3
p4 <- predict(poil4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p4
b1_hat <- coef(poi1)
b1_hat <- coef(poi1); b1_hat
y_val <- b1_hat[1] + b1_hat[2]*15; y_val
y1_hat <- exp(y_val)
y1_hat <- exp(y_val); y1_hat
# AIC value
AIC(poil1, poil2, poil3, poil4)
poil1 <- glm(Y1 ~ yearsmarried, family = poisson(), data = Affairs)
poil2 <- glm(Y1 ~ yearsmarried + rating, family = poisson(), data = Affairs)
poil3 <- glm(Y1 ~ yearsmarried + children, family = poisson(), data = Affairs)
poil4 <- glm(Y1 ~ yearsmarried + rating + children, family = poisson(), data = Affairs)
p1 <- predict(poil1, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p1
p2 <- predict(poil2, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p2
p3 <- predict(poil3, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p3
p4 <- predict(poil4, newdata=data.frame(yearsmarried = 15, children = "yes", rating = 2), type="response"); p4
AIC(poil1, poil2, poil3, poil4)
b1_hat <- coef(poi1); b1_hat
y_val <- b1_hat[1] + b1_hat[2]*15; y_val
y1_hat <- exp(y_val); y1_hat
# AIC value
AIC(poil1, poil2, poil3, poil4)
anova(poil2, poil4, test="Chisq")
anova(poil1, poil2, test="Chisq")
library(evtree)
library(evtree)
install.packages("evtree", dep=T)
library(evtree)
1+8+27+64
# Preparations
rm(list = ls(all.names = TRUE))
# read the dataset
df <- read.csv('Dataset/Rent-17807.csv')
setwd('C:\Users\DELL\Desktop\Summer 2023\RegDS23\reg_ss_23')
setwd('C:\\Users\\DELL\\Desktop\\Summer 2023\\RegDS23\\reg_ss_23')
getwd()
# read the dataset
df <- read.csv('Dataset/Rent-17807.csv')
# head of the data
head(df)
# attached the variables
attach(df)
# sample size
n <- nrow(df); n
m1 <- lm(netrent ~ space)
m2 <- lm(netrent ~ space + I(space^2), data = df)
m3 <- lm(netrent ~ rooms + year + space, data = df)
plot(space, netrent)
abline(m1)
b2_hat <- m2$coefficients; b2_hat
curve(b2_hat[1] + b2_hat[2]*x +b2_hat[3]*x^2,
col="darkblue",
lwd = 3, add=TRUE)
summary(m3)
y3_hat <- predict(m3)
y3_hat
rss3 <- sum((y3_hat - netrent)^2); rss3
summary(m3)
rss3 <- sum((y3_hat - netrent)^2); sqrt(rss3)
y3_hat
netrent
rss3 <- mean((y3_hat - netrent)^2); rss3
rss3 <- mean((y3_hat - netrent)^2); rss3
rss3 <- mean((y3_hat - netrent)^2); sqrt(rss3)
summary(m3)
rss3 <- mean((y3_hat - netrent)^2)
sigma3 <- sqrt(rss3/n)
sigma3 <- sqrt(rss3/n); sigma3
rss3 <- mean((y3_hat - netrent)^2)
sigma3 <- sqrt(rss3/n); sigma3
rss3 <- sum((y3_hat - netrent)^2)
sigma3 <- sqrt(rss3/n); sigma3
sigma3 <- sqrt(rss3/95); sigma3
# Preparations
rm(list = ls(all.names = TRUE))
# load the dataset
df <- read.csv('Dataset/Rent-17807.csv')
attach(df)
head(df)
m1 <- lm(netrent ~ space)
m2 <- lm(netrent ~ space + I(space^2))
m3 <- lm(netrent ~ rooms + year + space)
m4 <- lm(netrent ~ space + I(space^2) + year + kitchen)
# Sol (a):
n <- nrow(df); n # n = 99
# Sol (b):
rss <- sum(residuals(m3)^2)
# sigma_hat = rss / (n-p-1) | here, p+1 is the total number of coefficients
sigma_hat <- sqrt(rss / (n - length(coef(m3))))
sigma_hat # 183.8335
# Using model m4, predict the net rent for an appartment of 60 square metres that was built in 1975 and has no upscale kitchen:
new_data <- data.frame(space=c(60), year=c(1975), kitchen=c("no")); new_data
predict(m4, newdata = new_data)
# Sol(d):
AIC(m1, m2, m3, m4)
# Sol(e):
summary(m3)
(2*4)-141.91
a <- (2*4)-141.91
a/2
grade_max <- 4.0
grade_min <- 2.0
your_cgpa <- 3.96
((grade_max - your_cgpa) / (grade_max - grade_min))*3 + 1
german_scale <- ((grade_max - your_cgpa) / (grade_max - grade_min))*3 + 1
german_scale
